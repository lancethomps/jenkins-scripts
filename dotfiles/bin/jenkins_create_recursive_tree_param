#!/usr/bin/env python
# PYTHON_ARGCOMPLETE_OK

import argparse
from typing import List

from ltpylib import collect
from ltpylib.jenkins import create_recursive_tree_param
from ltpylib.opts import BaseArgs, create_default_arg_parser, parse_args_and_init_others


class ScriptArgs(BaseArgs):

  def __init__(self, args: argparse.Namespace):
    super().__init__(args)

    self.container: str = args.container
    self.depth: int = args.depth
    self.fields: List[str] = collect.flatten_list_of_possible_csv_strings(args.fields)


def main():
  args = _parse_args()
  print(create_recursive_tree_param(args.container, args.fields, args.depth))


def _parse_args() -> ScriptArgs:
  arg_parser = create_default_arg_parser()

  arg_parser.add_argument("--container", default="jobs")
  arg_parser.add_argument("--depth", type=int, default=10)
  arg_parser.add_argument("--fields", default=["color", "fullName", "name", "url"])

  return ScriptArgs(parse_args_and_init_others(arg_parser))


if __name__ == "__main__":
  try:
    main()
  except KeyboardInterrupt:
    exit(130)
